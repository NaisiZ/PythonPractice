#1 FizzBuzz

def checkio(number):
    #Your code here
    #It's main function. Don't remove this function
    #It's using for auto-testing and must return a result for check.
    if (number%3)==0 and (number%5)==0:
        number= ("Fizz Buzz")
    elif (number%5)==0:
        number= ("Buzz")
    elif (number%3)==0:
        number= ("Fizz")
    else:
        print (number)
    #replace this for solution
    return str(number)

#2 index_power

def index_power(array, n):
    if n==0:
        return (1)
    elif len(array) <= n:
        return (-1)
    else:
        return (array[n]**n)

#3 even the last

def checkio(array):
    """
        sums even-indexes elements and multiply at the last
    """
    if len(array)>0:
        result=0
        for i in range(0, len(array), 2):
            result+=array[i]
        return result*array[-1]    
    else:
        return 0

#4 find the secret message

def find_message(text):
    """Find a secret message"""
    sum=""
    for i in text:
        if i.isupper()==True:
            sum+=i
    return sum

if __name__ == '__main__':
    #These "asserts" using only for self-checking and not necessary for auto-testing
    assert find_message("How are you? Eh, ok. Low or Lower? Ohhh.") == "HELLO", "hello"
    assert find_message("hello world!") == "", "Nothing"
    assert find_message("HELLO WORLD!!!") == "HELLOWORLD", "Capitals"

#5 Three words (in a row)
/*Let's teach the Robots to distinguish words and numbers.
You are given a string with words and numbers separated by whitespaces (one space). The words contains only letters. You should check if the string contains three words in succession. For example, the string "start 5 one two three 7 end" contains three words in succession.
Input: A string with words.
Output: The answer as a boolean.
Precondition: The input contains words and/or numbers. There are no mixed words (letters and digits combined).
0 < len(words) < 100
*/    

def checkio(words):
    count=0
    for w in words.split():
        if w.isalpha():
            count+=1
            if count>=3:
                return True
        else:    
            count=0
    if count<3:
        return False

#These "asserts" using only for self-checking and not necessary for auto-testing
if __name__ == '__main__':
    assert checkio("Hello World hello") == True, "Hello"
    assert checkio("He is 123 man") == False, "123 man"
    assert checkio("1 2 3 4") == False, "Digits"
    assert checkio("bla bla bla bla") == True, "Bla Bla"
    assert checkio("Hi") == False, "Hi"
    
